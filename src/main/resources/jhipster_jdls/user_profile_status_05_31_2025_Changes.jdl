// ===================================================
// MULTI-TENANT EVENT MANAGEMENT SYSTEM - JHipster JDL
// Generated from PostgreSQL Schema
// ===================================================

// Global Options
service all with serviceImpl
paginate all with pagination
dto all with mapstruct
search * with no
filter all

// Entity Definitions
entity TenantOrganization {
  id Long
  tenantId String unique required maxlength(255)
  organizationName String required maxlength(255)
  domain String unique maxlength(255)
  primaryColor String maxlength(7) // Hex color
  secondaryColor String maxlength(7)
  logoUrl String maxlength(1024)
  contactEmail String required maxlength(255)
  contactPhone String maxlength(50)
  subscriptionPlan String required maxlength(50) // FREE, BASIC, PREMIUM, ENTERPRISE
  subscriptionStatus String required maxlength(50) // ACTIVE, SUSPENDED, CANCELLED, EXPIRED
  subscriptionStartDate LocalDate
  subscriptionEndDate LocalDate
  monthlyFeeUsd BigDecimal
  stripeCustomerId String maxlength(255)
  isActive Boolean
  createdAt ZonedDateTime required
  updatedAt ZonedDateTime required
}

entity UserProfile {
  id Long
  tenantId String maxlength(255)
  userId String required unique maxlength(255)
  firstName String maxlength(255)
  lastName String maxlength(255)
  email String maxlength(255)
  phone String maxlength(255)
  addressLine1 String maxlength(255)
  addressLine2 String maxlength(255)
  city String maxlength(255)
  state String maxlength(255)
  zipCode String maxlength(255)
  country String maxlength(255)
  notes String maxlength(255)
  familyName String maxlength(255)
  cityTown String maxlength(255)
  district String maxlength(255)
  educationalInstitution String maxlength(255)
  profileImageUrl String maxlength(255)
  userStatus String maxlength(50)
  userRole String maxlength(50)
//  reviewedByAdmin Long  actually referenced at the relationship section
  reviewedByAdminAt LocalDate
  createdAt ZonedDateTime required
  updatedAt ZonedDateTime required
}



// Relationships
//relationship OneToOne {
//
//}

relationship ManyToOne {
    UserProfile{reviewedByAdmin} to UserProfile
}
