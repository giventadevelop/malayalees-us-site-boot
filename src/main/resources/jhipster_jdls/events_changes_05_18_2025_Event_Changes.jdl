// User Profile entity
entity UserProfile {
    id Long required,
    userId String required unique,
    firstName String,
    lastName String,
    email String,
    phone String,
    addressLine1 String,
    addressLine2 String,
    city String,
    state String,
    zipCode String,
    country String,
    notes String,
    familyName String,
    cityTown String,
    district String,
    educationalInstitution String,
    profileImageUrl String,
    createdAt Instant required,
    updatedAt Instant required
}

// Event Type entity
entity EventType {
    id Long required,
    name String required unique,
    description String,
    createdAt Instant required,
    updatedAt Instant required
}

// Event entity
entity Event {
    id Long ,
    title String required,
    caption String,
    description String,
    startDate LocalDate required,
    endDate LocalDate required,
    startTime String required,
    endTime String required,
    location String,
    directionsToVenue String,
    capacity Integer,
    admissionType String required,
    isActive Boolean,
    createdAt Instant required,
    updatedAt Instant required
}

// Event Media entity
entity EventMedia {
    id Long,
    title String required,
    description String,
    eventMediaType String required,
    storageType String required,
    fileUrl String,
    preSignedUrl String,
    fileData Blob,
    contentType String,
    fileSize Integer,
    isPublic Boolean,
    eventFlyer Boolean,
    isEventManagementOfficialDocument Boolean,
    createdAt Instant required,
    updatedAt Instant required
}

// Relationships
relationship ManyToOne {
    Event{createdBy} to UserProfile,
    Event{eventType} to EventType,
    EventMedia{event} to Event,
    EventMedia{uploadedBy} to UserProfile
}

// Options for entities
service all with serviceImpl
paginate all with pagination
dto all with mapstruct
search * with no
filter all
