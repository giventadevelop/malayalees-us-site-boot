/**
 * Event Guest Management JDL Model
 * Enhanced entities for sophisticated guest management with age-based pricing
 */

// Enums for better data consistency
enum GuestAgeGroup {
    ADULT, TEEN, CHILD, INFANT
}

enum UserToGuestRelationship {
    SPOUSE, CHILD, FRIEND, COLLEAGUE, PARENT, SIBLING, RELATIVE, OTHER
}

enum UserEventRegistrationStatus {
    PENDING, CONFIRMED, CANCELLED, WAITLISTED
}

enum UserEventCheckInStatus {
    NOT_CHECKED_IN, CHECKED_IN, NO_SHOW, LEFT_EARLY
}

// Event Attendee Guest entity for managing individual guests
entity EventAttendeeGuest {
    id Long,
    tenantId String maxlength(255),
    guestName String required maxlength(255),
    ageGroup GuestAgeGroup required,
    relationship UserToGuestRelationship,
    specialRequirements String maxlength(500),
    registrationStatus UserEventRegistrationStatus,
    checkInStatus UserEventCheckInStatus,
    checkInTime ZonedDateTime,
    createdAt ZonedDateTime required,
    updatedAt ZonedDateTime required
}

// Event Guest Pricing entity for age-based pricing models
entity EventGuestPricing {
    id Long,
    tenantId String maxlength(255),
    ageGroup GuestAgeGroup required,
    price BigDecimal required min(0),
    isActive Boolean,
    validFrom LocalDate,
    validTo LocalDate,
    description String maxlength(255),
    createdAt ZonedDateTime required,
    updatedAt ZonedDateTime required
}

// Enhanced Event Attendee entity for guest management
entity EventAttendee {
    id Long,
    tenantId String maxlength(255),
    registrationStatus UserEventRegistrationStatus,
    registrationDate ZonedDateTime required,
    confirmationDate ZonedDateTime,
    cancellationDate ZonedDateTime,
    cancellationReason String maxlength(500),
    attendeeType String maxlength(50),
    specialRequirements String maxlength(1000),
    emergencyContactName String maxlength(255),
    emergencyContactPhone String maxlength(50),
    checkInStatus UserEventCheckInStatus,
    checkInTime ZonedDateTime,
    totalGuestCount Integer min(0),
    adultGuestCount Integer min(0),
    teenGuestCount Integer min(0),
    childGuestCount Integer min(0),
    infantGuestCount Integer min(0),
    totalGuestCost BigDecimal min(0),
    notes String maxlength(1000),
    createdAt ZonedDateTime required,
    updatedAt ZonedDateTime required
}

// Event Details entity (using your exact structure)
entity EventDetails {
    id Long,
    tenantId String maxlength(255),
    title String required maxlength(255),
    caption String maxlength(255),
    description String maxlength(255),
    startDate LocalDate required,
    endDate LocalDate required,
    startTime String required maxlength(100),
    endTime String required maxlength(100),
    location String maxlength(255),
    directionsToVenue String maxlength(255),
    capacity Integer,
    admissionType String required maxlength(255),
    isActive Boolean,
    maxGuestsPerAttendee Integer min(0),
    allowGuests Boolean,
    requireGuestApproval Boolean,
    enableGuestPricing Boolean,
    createdAt ZonedDateTime required,
    updatedAt ZonedDateTime required
}

// User Profile entity (using your exact structure)
entity UserProfile {
    id Long,
    tenantId String maxlength(255),
    userId String required unique maxlength(255),
    firstName String maxlength(255),
    lastName String maxlength(255),
    email String maxlength(255),
    phone String maxlength(255),
    addressLine1 String maxlength(255),
    addressLine2 String maxlength(255),
    city String maxlength(255),
    state String maxlength(255),
    zipCode String maxlength(255),
    country String maxlength(255),
    notes String maxlength(255),
    familyName String maxlength(255),
    cityTown String maxlength(255),
    district String maxlength(255),
    educationalInstitution String maxlength(255),
    profileImageUrl String maxlength(255),
    userStatus String maxlength(50),
    userRole String maxlength(50),
    reviewedByAdminAt LocalDate,
    createdAt ZonedDateTime required,
    updatedAt ZonedDateTime required
}

// Relationships
relationship ManyToOne {
    EventAttendeeGuest{primaryAttendee required} to EventAttendee,
    EventGuestPricing{event required} to EventDetails,
    EventAttendee{event required} to EventDetails,
    EventAttendee{attendee required} to UserProfile,
    UserProfile{reviewedByAdmin} to UserProfile
}

// Validation rules and constraints
// EventAttendeeGuest should cascade delete when primary attendee is deleted
// EventGuestPricing should cascade delete when event is deleted
// Age groups should have consistent pricing rules
// Guest counts should not exceed event capacity limits

// Global Options
service all with serviceImpl
paginate all with pagination
dto all with mapstruct
search * with no
filter all

// Microservice definition (if using microservices)
//microservice EventAttendeeGuest, EventGuestPricing with eventmanagement
