services:

#  # PostgreSQL Database
#  postgres:
#    image: postgres:13
#    container_name: event-site-manager-postgres
#    environment:
#      POSTGRES_DB: event_site_manager_db
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: password
#      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#      - ./src/main/resources/sqls:/docker-entrypoint-initdb.d
#      - ./init-scripts:/docker-entrypoint-initdb.d
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres -d event_site_manager_db"]
#      interval: 10s
#      timeout: 5s
#      retries: 10
#      start_period: 30s
#    networks:
#      - event-site-manager-network
#
#  # Redis Cache
#  redis:
#    image: redis:6-alpine
#    container_name: event-site-manager-redis
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis_data:/data
#    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
#    healthcheck:
#      test: ["CMD", "redis-cli", "ping"]
#      interval: 10s
#      timeout: 5s
#      retries: 10
#      start_period: 30s
#    networks:
#      - event-site-manager-network

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile.local
    container_name: event-site-manager-app
    ports:
      - "8080:8080"
    environment:
      # Spring Configuration
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      JAVA_OPTS: ${JAVA_OPTS}

      # Database Configuration
      RDS_ENDPOINT: ${RDS_ENDPOINT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}

      # PostgreSQL Caching Configuration
      CACHE_TYPE: ${CACHE_TYPE}
      POSTGRES_CACHE_TABLE: ${POSTGRES_CACHE_TABLE}

      # AWS Configuration
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}

      # Twilio Configuration
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_WHATSAPP_FROM: ${TWILIO_WHATSAPP_FROM}

      # Application URLs
      QRCODE_SCAN_HOST_PREFIX: ${QRCODE_SCAN_HOST_PREFIX}
      EMAIL_HOST_URL_PREFIX: ${EMAIL_HOST_URL_PREFIX}

      # JHipster Security Configuration
      JHIPSTER_SECURITY_AUTHENTICATION_JWT_SECRET: ${JHIPSTER_SECURITY_AUTHENTICATION_JWT_SECRET}
      JHIPSTER_SECURITY_AUTHENTICATION_JWT_BASE64_SECRET: ${JHIPSTER_SECURITY_AUTHENTICATION_JWT_BASE64_SECRET}
      JHIPSTER_SECURITY_AUTHENTICATION_JWT_TOKEN_VALIDITY_IN_SECONDS: ${JHIPSTER_SECURITY_AUTHENTICATION_JWT_TOKEN_VALIDITY_IN_SECONDS}
      JHIPSTER_SECURITY_AUTHENTICATION_JWT_TOKEN_VALIDITY_IN_SECONDS_FOR_REMEMBER_ME: ${JHIPSTER_SECURITY_AUTHENTICATION_JWT_TOKEN_VALIDITY_IN_SECONDS_FOR_REMEMBER_ME}

      # JHipster Mail Configuration
      JHIPSTER_MAIL_FROM: ${JHIPSTER_MAIL_FROM}
      JHIPSTER_MAIL_BASE_URL: ${JHIPSTER_MAIL_BASE_URL}

      # JWT API Authentication Credentials (Externalized)
      JWT_API_AUTH_USERNAME: ${JWT_API_AUTH_USERNAME}
      JWT_API_AUTH_PASSWORD: ${JWT_API_AUTH_PASSWORD}
    volumes:
      - ../../../../logs:/var/log/spring-boot-app
      - ../../../../target:/app/target
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/management/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    networks:
      - event-site-manager-network

#  # pgAdmin (Database Management UI)
#  pgadmin:
#    image: dpage/pgadmin4:latest
#    container_name: event-site-manager-pgadmin
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:admin@local.com}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:admin}
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    ports:
#      - "5050:80"
#    volumes:
#      - pgadmin_data:/var/lib/pgadmin
#    depends_on:
#      - postgres
#    networks:
#      - event-site-manager-network
#
#  # Redis Commander (Redis Management UI)
#  redis-commander:
#    image: rediscommander/redis-commander:latest
#    container_name: event-site-manager-redis-commander
#    environment:
#      REDIS_HOSTS: local:redis:6379
#      HTTP_USER: ${REDIS_COMMANDER_USER:admin}
#      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD:admin}
#    ports:
#      - "8081:8081"
#    depends_on:
#      - redis
#    networks:
#      - event-site-manager-network
#
#  # MailHog (Email Testing)
#  mailhog:
#    image: mailhog/mailhog:latest
#    container_name: event-site-manager-mailhog
#    ports:
#      - "1025:1025"  # SMTP
#      - "8025:8025"  # Web UI
#    networks:
#      - event-site-manager-network
#
#volumes:
#  postgres_data:
#    driver: local
#  redis_data:
#    driver: local
#  pgadmin_data:
#    driver: local

networks:
  event-site-manager-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
