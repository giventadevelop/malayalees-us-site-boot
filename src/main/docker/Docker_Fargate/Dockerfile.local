# ===================================================================
# Local Development Dockerfile
# Optimized for local testing and development
# ===================================================================

FROM eclipse-temurin:17-jre

# Install curl for health checks
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r spring && useradd -r -g spring spring

# Set working directory
WORKDIR /app

# Copy the JAR file (will be mounted as volume in docker-compose)
# The JAR file will be available at /app/target/*.jar via volume mount

# Create logs directory
RUN mkdir -p /var/log/spring-boot-app && \
    chown -R spring:spring /var/log/spring-boot-app

# Change ownership of the application
RUN chown -R spring:spring /app

# Switch to non-root user
USER spring

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/management/health || exit 1

# JVM optimization for local development
ENV JAVA_OPTS="-XX:+UseContainerSupport \
    -XX:MaxRAMPercentage=75.0 \
    -XX:+UseG1GC \
    -Djava.security.egd=file:/dev/./urandom \
    -Dspring.profiles.active=local \
    -Dspring.liquibase.enabled=true"

# Run the application
ENTRYPOINT ["sh", "-c", "if [ -f /app/target/*.jar ]; then java $JAVA_OPTS -jar /app/target/*.jar; else echo 'Error: JAR file not found in /app/target/. Please run: mvn clean package -DskipTests'; exit 1; fi"]
